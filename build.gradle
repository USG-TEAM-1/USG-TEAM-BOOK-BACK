plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	// jacoco 추가
	id 'jacoco'
}

// jacoco 추가
jacoco {
	toolVersion = "0.8.7" // JaCoCo 버전을 필요에 맞게 업데이트하세요.
}

group = 'com.usg'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// gcs
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter', version: '1.2.5.RELEASE'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-storage', version: '1.2.5.RELEASE'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// test container
	testImplementation "org.testcontainers:testcontainers:1.19.1"
	testImplementation "org.testcontainers:junit-jupiter:1.19.1"
}

tasks.named('test') {
	useJUnitPlatform()
}

// 테스트 태스크 설정
test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // 테스트 후 JaCoCo 리포트 생성
}

// 리포트 생성 명령어: ./gradlew --console verbose test jacocoTestReport jacocoTestCoverageVerification
// JaCoCo 리포트 설정
jacocoTestReport {
	reports {
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/Q*.class",
					"**/*Dto.*",
					"**/*dto*"
			])
		}))
	}
}

clean {
	delete file('src/main/generated')
}